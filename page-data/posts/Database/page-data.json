{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/Database",
    "result": {"pageContext":{"currentCategory":"Database","categories":["All","Life","CS","Framework","Algorithm","Database","Projects","Tips"],"edges":[{"node":{"id":"e8468b17-0f1f-58a1-9e97-932dcea7d541","excerpt":"SQL SQL이란 Structured Query Language 입니다. RDBMS(관계형 데이터베이스 관리 시스템)과 상호 작용을 하기 위한 언어이며, 데이터베이스가 아닙니다. 어쨌든 중요한건 SQL는 관계형 데이터베이스를 다룰 때 사용한다는 것입니다. RDBMS에는 두가지의 중요한 특성이 있습니다. 데이터는 정해진(엄격한) 데이터 스키마 (= structure)를 따라 데이터베이스 테이블에 저장됩니다. 데이터는 관계를 통해서 연결된 여러개의 테이블에 분산됩니다. 엄격한 스키마 데이터는 Table에 Record로 저장이 되며, 명확하게 정의된 Schema가 존재합니다. Schema는 구조이며, 이 구조에 적합하지 않은 Record는 Table에 추가할 수가 없습니다. 그래서  이란 표현을 쓰는겁니다. 관계 이름에서부터 알 수 있듯이  입니다. 각 테이블마다 관계를 맺고있다는 뜻입니다. 이게 중요한 이유는 중복을 피할 수 있다는 것입니다. 그 관계는 Foregin Key와 Prim…","fields":{"slug":"/SQL-VS-NOSQL/"},"frontmatter":{"categories":"Database","title":"SQL과 NoSQL의 비교","date":"April 04, 2021"}},"next":{"fields":{"slug":"/java-gc/"}},"previous":{"fields":{"slug":"/Asymmetric-Key/"}}},{"node":{"id":"590985ea-7748-5197-a999-f136e21f23ac","excerpt":"SQL 은 Structured Query Language 의 줄임말로, 관계형 데이터베이스 시스템(RDBMS)에서 저장된 데이터베이스의 자료를 검색하고 관리하기 위한 언어입니다. SQL의 종류 DDL (Date Definition Language)\n릴레이션을 정의하기 위한 언어를 의미하며, 테이블을 생성, 수정, 삭제할 수 있는 CREATE,ALTER,DROP 등의 명령어가 있습니다. DML (Data Manipulation Language)\n데이터의 추가, 수정, 검색, 삭제를 위한 언어를 의미하며, SELECT, INSERT, UPDATE 등의 명령어가 있습니다. DCL (Data Control Language)\n사용자의 접근 권한을 제어하는 언어를 의미하며, GRANT, REVOKE 등이 있습니다. DDL 명령어 CREATE 데이터베이스 생성 데이터베이스 사용 테이블(릴레이션)의 생성 View 생성 SHOW 데이터베이스 확인 테이블 확인 DESC 테이블 정보 확인 ALTER …","fields":{"slug":"/About-sql/"},"frontmatter":{"categories":"Database","title":"SQL 기본적인 문법 정리","date":"March 29, 2021"}},"next":{"fields":{"slug":"/Database-mariadb/"}},"previous":{"fields":{"slug":"/synchronization/"}}},{"node":{"id":"7e710bd1-e23e-5549-9dcf-0ddb812e9aa2","excerpt":"MariaDB란? RDBMS(Relational DBMS)이며, 오픈소스이다. Mysql API와 정확히 일치하여 호환성이 높고, MYSQL의 Monti program AB를 설립한 Michael Monty Widenius가 개발했다. (Monty의 둘째 딸 이름을 따서 MariaDB라고 합니다.) 설치방법 Xcode Xcode는 맥에 깔려있는 앱스토어에서 다운로드 받으시면 됩니다. HomeBrew 설치 Homebrew는 macOS 용 패키지 관리자이며, 리눅스에서 사용하는 sudo apt-get, yum 등과 같다고 생각하시면 됩니다.\nHomebrew로 설치하는 것이 어렵다고 느끼실 수 있지만, 환경변수나 패키지 관리를 아주 잘해주기 때문에 매우 편합니다. 익숙해지면 한 줄의 명령어로 패키지를 설치해주는 홈브류에게 고마움을 느끼실 겁니다 ㅎㅎ 먼저 터미널에 접속해줍니다. 위 명령어를 터미널에 입력해주세요.\n이후 나오는 것에서 엔터 입력하라면 하고, 맥북 비밀번호 입력하면 됩니다.…","fields":{"slug":"/Database-mariadb/"},"frontmatter":{"categories":"Database","title":"맥북에서 mariadb 설치하기 (HomeBrew)","date":"March 24, 2021"}},"next":{"fields":{"slug":"/Database-concept/"}},"previous":{"fields":{"slug":"/About-sql/"}}},{"node":{"id":"ab830512-e2eb-55b5-aac0-98d47202be84","excerpt":"본 포스팅은 한양대학교 컴퓨터소프트웨어 학부 데이터 베이스 시스템 과목에서 학습한 내용을 기반으로 함을 알려드립니다. Data 흔히 많이 들어본 데이터(Data)의 정의는, 다음과 같습니다. 기존에 알려져 있는 ‘Fact’ 중 기록과 저장이 가능한 것 예를 들어서 이름, 주소, 핸드폰 번호 등이 있습니다. Database 데이터베이스란 쉽게 생각하면 데이터를 모아놓은 것인데, 좀 더 정확한 정의는 다음과 같습니다. 연관되어 있는 데이터가 논리적으로 연결된 집합 예를 들어, 한 회사의 연락처는 데이터베이스가 되는 겁니다. 핸드폰 번호라는 가 에 의해 같은 회사 사람의 데이터로 논리적 연결이 형성되면서 집합을 형성한 겁니다. 어렵게 설명했지만 쉽게 말하자면 의 개념으로 이해하시면 됩니다. 실제 세상에서, 어떤 한 면을 대표하는 것으로 생각하는 것입니다. 이 느낌을 잘 가지고 있는 것이 중요합니다. 본 포스팅에서는 RDBMS(관계형 데이터베이스)를 다루며, SQL을 사용하지 않는 데이터…","fields":{"slug":"/Database-concept/"},"frontmatter":{"categories":"Database","title":"Data, Database, DBMS의 개념","date":"March 23, 2021"}},"next":{"fields":{"slug":"/Kakao-OpenBuilder-RestAPI-Server/"}},"previous":{"fields":{"slug":"/Database-mariadb/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}